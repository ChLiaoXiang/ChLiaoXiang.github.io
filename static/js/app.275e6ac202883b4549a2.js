webpackJsonp([0],{"2cNW":function(t,e){},"8xqR":function(t,e){},Drwf:function(t,e){},JgTF:function(t,e){},M4by:function(t,e){},MmyR:function(t,e){},NHnr:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var s=n("xd7I"),a={render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{id:"app"}},[e("router-view")],1)},staticRenderFns:[]};var r=n("C7Lr")({name:"App"},a,!1,function(t){n("fRpv")},null,null).exports,i=n("KGCO"),o={name:"login",data:function(){return{msg:"Login 登陆页面"}},methods:{handerLogin:function(){this.$router.push("/index"),sessionStorage.setItem("id",-1)}}},l={render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"container",attrs:{id:"login"}},[e("h1",[this._v(this._s(this.msg))]),this._v(" "),e("hr"),this._v(" "),e("button",{staticClass:"btn btn-default",on:{click:this.handerLogin}},[this._v("登陆")])])},staticRenderFns:[]};var c=n("C7Lr")(o,l,!1,function(t){n("oTip")},"data-v-89964e2c",null).exports,v={render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{id:"index"}},[e("nav-list"),this._v(" "),e("div",{staticClass:"container"},[e("transition",{attrs:{"enter-active-class":"animated zoomIn",appear:""}},[e("router-view")],1)],1)],1)},staticRenderFns:[]};var u=n("C7Lr")({name:"index",data:function(){return{}},methods:{},mounted:function(){}},v,!1,function(t){n("2cNW")},null,null).exports,m={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"sayMySelf"},[t._m(0),t._v(" "),n("div",{staticClass:"myself-show row"},[n("div",{staticClass:"my-slef-swiper col-md-4"},[n("swiper",{attrs:{options:t.swiperOption}},[t._l(t.slideImages,function(t,e){return n("swiper-slide",{key:e},[n("a",{attrs:{href:"#",target:"_blank"}},[n("img",{attrs:{src:t.imageUrl}})])])}),t._v(" "),n("div",{staticClass:"swiper-pagination swiper-pagination-bullets",attrs:{slot:"pagination"},slot:"pagination"})],2)],1),t._v(" "),n("div",{staticClass:"col-md-6 col-md-offset-1 show-star"},[n("h3",[t._v("个人信息")]),t._v(" "),n("hr"),t._v(" "),n("div",{staticStyle:{"margin-top":"40px"}},t._l(t.myInfo,function(e,s){return n("p",{key:s,staticClass:"my-info"},[n("span",[t._v(t._s(s)+"：")]),t._v(" "),n("span",[t._v(t._s(e))])])}),0)])]),t._v(" "),t._m(1),t._v(" "),n("br"),n("br"),n("br"),n("br"),n("br"),n("br")])},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"row"},[e("h4",{staticClass:"col-md-12 title"},[this._v("自我独白")])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("信息简介")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                该页面利用Vue所有得知识点进行页面得构造分只是点的归纳: "),n("br"),t._v(" "),n("hr"),t._v("\n                1，nav导航栏做的一个全局组建，利用Vue提供得方法进行注册（Vue.component('name',import name from '/paht')）。\n                "),n("hr"),t._v("\n                2，nav条的点击利用的Vuerouter 实现功能，本利用了sessionStorage 来存储点点击后存储的id 对页面刷新路由和nav 不一致情况。\n                "),n("hr"),t._v("\n                3，nav中的数据利用的Vuex 状态管理的方式来进行的传参，使用将在Vuex 仓库管理中具体讲解。\n                "),n("hr"),t._v("\n                4，引入了swiper 个人展示中的轮播图。（npm install -S vue-awesome-swiper ， Vue.use(spwier) , 并引入CSS 文件）。\n                "),n("hr"),t._v("\n                5，在初步Vue中打包时，打包后 index.html 空白！ 初步解决方案是 config/index.js 中 build.assetsPublicPath : './' 值改成  './'最初是 '/'。\n            ")])])])}]};var d=n("C7Lr")({name:"onself",data:function(){return{slideImages:[{name:"myImg",imageUrl:"../../../static/imgs/my-img1.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img2.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img3.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img4.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img5.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img6.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img7.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img8.jpg"},{name:"myImg",imageUrl:"../../../static/imgs/my-img9.jpg"}],swiperOption:{autoplay:{delay:2500,disableOnInteraction:!1},loop:!0,pagination:{el:".swiper-pagination",clickable:!0,renderBullet:function(t,e){return'<span class="'+e+' swiper-pagination-bullet-custom"></span>'}}},myInfo:{"姓名":"廖翔","身份证号":"513030199x071082xx","居住地址":"四川省成都市锦江区望江锦苑","户籍地址":"四川省达州市渠县","当前工作":"前端开发工程师 -- 2年","个人爱好":"吃饭，睡觉，二次元，动漫，小说，科技。"}}}},m,!1,function(t){n("vi+N")},"data-v-1182b7f3",null).exports,_={name:"baseStudy",data:function(){return{title:"Vue基础笔记",nowType:["高级","中级","低级"],userInfo:{email:"12345@qq.com",pwd:"123456",age:12,likes:["吃饭","撩妹"],remark:"这是一些胡乱的东西",sex:1,level:"中级"},userLIstanbul:[5,6,7,8,9,10],rewriteArrayApis:["Array中的push的push方法重写，用法未变 arr.push() ==> 数组后添加","Array中的pop的pop方法重写，用法未变 arr.pop() ==> 数组后删除，返回删除的数组","Array中的shift的shift方法重写，用法未变 arr.shift() 数组第一位删除，返回删除的","Array中的unshift的unshift方法重写，用法未变 arr.unshift() 数组第一个添加","Array中的replice的replice方法重写，用法未变 arr.replice() 数组的删除和增加方法","Array中的sort的sort方法重写，用法未变 arr.sort() 排序","Array中的reverse的reverse方法重写，用法未变 arr.reverse() 倒序"],fruits:[{name:"apple",price:"12"},{name:"banana",price:"15"},{name:"pear",price:"13"}],num:0}},computed:{compitedFruits:function(){return this.fruits.map(function(t,e){var n={};return n.name=t.name,n.price="￥"+t.price,n})}},watch:{fruits:{handler:function(t,e){console.log(t,"这是新值"),console.log(e,"这是旧值")},deep:!0}},methods:{hanlderClick:function(){var t=this;this.userLIstanbul.forEach(function(e,n){t.$set(t.userLIstanbul,n,e+3)})},handlerWatch:function(){this.fruits.forEach(function(t,e){t.price=t.price-0+5})}},created:function(){},mounted:function(){}},p={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"base"}},[n("h4",{staticClass:"title"},[t._v(t._s(t.title))]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("Vue 入门知识点")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                vue 基本指令: "),n("br"),t._v(" "),n("hr"),t._v(" "),n("pre",[t._v("                    let vm = new Vue({      \n                        data(){ //如果是子组件 数据要return 出去\n                            msg : 'hello Vue.js',\n                            userList: [\n                                {name:'lx',age:12,sex:'男'},\n                                {name:'lc',age:12,sex:'男'},\n                                {name:'lcm',age:12,sex:'女'},\n                            ]\n                        },\n                        methods:{\n                            hanlderClick(){\n                                console.log('hello bind , 我是一个绑定的click 事件！');\n                            }\n                        }\n                    })\n                ")]),t._v("\n                1，Vue双花括号语法"+t._s()+"， 在Vue 中的数据可以直接放入双花括号里， 也可以放入一些比较简单的表达式。 "),n("br"),n("br"),t._v('\n                2，Vue 中 绑定一个数据 例如： input 输入框绑定一个默认值 v-on:value = "data"; data = >vue中实例的数据。简写 :value '),n("br"),n("br"),t._v('\n                3，在Vue 中绑定一个方法 用v-bind 来绑定一个事件 v-bind:click="函数" ，简写的方式 @click，方法一般实例在methods里面。'),n("br"),n("br"),t._v('\n                4，如何动态绑定一个class => :class="{active: boolean }",如何动态绑定一个:style = "",computed:{ } 计算属性中返回一个标准的样式对象即可'),n("br"),n("br"),t._v("\n                5，条件渲染v-if / v-else-if / v-else 来判断是否渲染。例如："),n("br"),t._v('\n                type的值来显示标签里的内容  v-if="type == 1"/显示A  v-else-if="type == 2"/显示B   v-else/ 显示not A B ，V-if v-show 区别 前者不加载DOM 有着加载但隐藏。'),n("br"),n("br"),t._v('\n                6，在标签中渲染列表 v-for 指令： v-for="(item,key,index) in  userList" 分别把里面的内容用{ { item.name } }等模板语法渲染出来。注意在遍历一个对象的时候有三个参数\n                第一个是value,第二个是对象的key,第三个是下标。'),n("br"),n("br"),t._v("\n                7，事件修饰符： 过去我们阻止事件冒泡 e.stopPropagation Vue 给我们提供了@click.stop 包括还有一下的阻止行为的方式："),n("br"),t._v("\n                    .stop / 阻止冒泡行为  .prevent / 阻止默认行为  .self / 事件自身（避免冒泡影响） .once / 只触发一次\n            ")])])]),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("Vue 表单的一个练习")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                vue-from 表单:\n                "),n("hr"),t._v(" "),n("form",{staticClass:"form-horizontal"},[n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label",attrs:{for:"inputEmail3"}},[t._v("邮箱：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.email,expression:"userInfo.email"}],staticClass:"form-control",attrs:{type:"email",id:"inputEmail3",placeholder:"Email"},domProps:{value:t.userInfo.email},on:{input:function(e){e.target.composing||t.$set(t.userInfo,"email",e.target.value)}}})])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label",attrs:{for:"inputPassword3"}},[t._v("密码：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.pwd,expression:"userInfo.pwd"}],staticClass:"form-control",attrs:{type:"password",id:"inputPassword3",placeholder:"Password"},domProps:{value:t.userInfo.pwd},on:{input:function(e){e.target.composing||t.$set(t.userInfo,"pwd",e.target.value)}}})])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("年龄：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.age,expression:"userInfo.age"}],staticClass:"form-control",attrs:{type:"text",placeholder:"Password"},domProps:{value:t.userInfo.age},on:{input:function(e){e.target.composing||t.$set(t.userInfo,"age",e.target.value)}}})])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label",attrs:{for:"inputPassword3"}},[t._v("爱好：")]),t._v(" "),n("div",{staticClass:"col-sm-10 checkbox"},[n("label",[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.likes,expression:"userInfo.likes"}],attrs:{type:"checkbox",value:"吃饭"},domProps:{checked:Array.isArray(t.userInfo.likes)?t._i(t.userInfo.likes,"吃饭")>-1:t.userInfo.likes},on:{change:function(e){var n=t.userInfo.likes,s=e.target,a=!!s.checked;if(Array.isArray(n)){var r=t._i(n,"吃饭");s.checked?r<0&&t.$set(t.userInfo,"likes",n.concat(["吃饭"])):r>-1&&t.$set(t.userInfo,"likes",n.slice(0,r).concat(n.slice(r+1)))}else t.$set(t.userInfo,"likes",a)}}}),t._v(" 吃饭\n                            ")]),t._v(" "),n("label",[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.likes,expression:"userInfo.likes"}],attrs:{type:"checkbox",value:"睡觉"},domProps:{checked:Array.isArray(t.userInfo.likes)?t._i(t.userInfo.likes,"睡觉")>-1:t.userInfo.likes},on:{change:function(e){var n=t.userInfo.likes,s=e.target,a=!!s.checked;if(Array.isArray(n)){var r=t._i(n,"睡觉");s.checked?r<0&&t.$set(t.userInfo,"likes",n.concat(["睡觉"])):r>-1&&t.$set(t.userInfo,"likes",n.slice(0,r).concat(n.slice(r+1)))}else t.$set(t.userInfo,"likes",a)}}}),t._v(" 睡觉\n                            ")]),t._v(" "),n("label",[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.likes,expression:"userInfo.likes"}],attrs:{type:"checkbox",value:"打豆豆"},domProps:{checked:Array.isArray(t.userInfo.likes)?t._i(t.userInfo.likes,"打豆豆")>-1:t.userInfo.likes},on:{change:function(e){var n=t.userInfo.likes,s=e.target,a=!!s.checked;if(Array.isArray(n)){var r=t._i(n,"打豆豆");s.checked?r<0&&t.$set(t.userInfo,"likes",n.concat(["打豆豆"])):r>-1&&t.$set(t.userInfo,"likes",n.slice(0,r).concat(n.slice(r+1)))}else t.$set(t.userInfo,"likes",a)}}}),t._v(" 打豆豆\n                            ")]),t._v(" "),n("label",[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.likes,expression:"userInfo.likes"}],attrs:{type:"checkbox",value:"撩妹",checked:"checked"},domProps:{checked:Array.isArray(t.userInfo.likes)?t._i(t.userInfo.likes,"撩妹")>-1:t.userInfo.likes},on:{change:function(e){var n=t.userInfo.likes,s=e.target,a=!!s.checked;if(Array.isArray(n)){var r=t._i(n,"撩妹");s.checked?r<0&&t.$set(t.userInfo,"likes",n.concat(["撩妹"])):r>-1&&t.$set(t.userInfo,"likes",n.slice(0,r).concat(n.slice(r+1)))}else t.$set(t.userInfo,"likes",a)}}}),t._v(" 撩妹\n                            ")])])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label",attrs:{for:"inputPassword3"}},[t._v("备注：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[n("textarea",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.remark,expression:"userInfo.remark"}],staticClass:"form-control",attrs:{rows:"3"},domProps:{value:t.userInfo.remark},on:{input:function(e){e.target.composing||t.$set(t.userInfo,"remark",e.target.value)}}})])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label",attrs:{for:"inputPassword3"}},[t._v("性别：")]),t._v(" "),n("div",{staticClass:"col-sm-10 checkbox"},[n("label",{staticClass:"radio-inline"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.sex,expression:"userInfo.sex"}],attrs:{type:"radio",name:"sex",value:"1"},domProps:{checked:t._q(t.userInfo.sex,"1")},on:{change:function(e){return t.$set(t.userInfo,"sex","1")}}}),t._v(" 男\n                            ")]),t._v(" "),n("label",{staticClass:"radio-inline"},[n("input",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.sex,expression:"userInfo.sex"}],attrs:{type:"radio",name:"sex",value:"0"},domProps:{checked:t._q(t.userInfo.sex,"0")},on:{change:function(e){return t.$set(t.userInfo,"sex","0")}}}),t._v(" 女\n                            ")])])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label",attrs:{for:"inputPassword3"}},[t._v("水平：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[n("select",{directives:[{name:"model",rawName:"v-model",value:t.userInfo.level,expression:"userInfo.level"}],staticClass:"form-control",on:{change:function(e){var n=Array.prototype.filter.call(e.target.options,function(t){return t.selected}).map(function(t){return"_value"in t?t._value:t.value});t.$set(t.userInfo,"level",e.target.multiple?n:n[0])}}},t._l(t.nowType,function(e,s){return n("option",{key:s,domProps:{value:e}},[t._v(t._s(e))])}),0)])]),t._v(" "),n("div",{staticClass:"form-group"},[n("div",{staticClass:"col-sm-offset-2 col-sm-10"},[n("button",{staticClass:"btn btn-default",attrs:{type:"submit"},on:{click:function(t){t.preventDefault()}}},[t._v("Sign in")])])])]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"form-horizontal"},[n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("邮箱：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[t._v("\n                            "+t._s(t.userInfo.email)+"\n                        ")])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("密码：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[t._v("\n                            "+t._s(t.userInfo.pwd)+"\n                        ")])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("年龄：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[t._v("\n                            "+t._s(t.userInfo.age)+"\n                        ")])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("爱好：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},t._l(t.userInfo.likes,function(e,s){return n("span",{key:s},[t._v(t._s(e)+"，")])}),0)]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("备注：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[t._v("\n                            "+t._s(t.userInfo.remark)+"\n                        ")])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("水平：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[t._v("\n                            "+t._s(t.userInfo.level)+"\n                        ")])]),t._v(" "),n("div",{staticClass:"form-group"},[n("label",{staticClass:"col-sm-2 control-label"},[t._v("性别：")]),t._v(" "),n("div",{staticClass:"col-sm-10"},[t._v("\n                            "+t._s(1==t.userInfo.sex?"男":"女")+"\n                        ")])])])]),t._v(" "),n("div",[n("div",{staticClass:"pageAnalysis"},[t._v("\n                    表单里的笔记\n                    "),n("hr"),t._v("\n                    1，渲染数字的时候我们会发现一件事，就是input 输入的内容现在是的时候是 string ，但是我们要得到的是number 类型，Vue 在双向数据绑定的时候给了我们一个.number修饰符\n                    v-moodel.number 。"),n("br"),n("br"),t._v("\n                    2，双向数据绑定中，我们在input 框中输入相应渲染的内容也跟着改变，如何让输入完成后内容才发生改变呢？ vue 提供了另外一个修饰符来进行修改 .lazy修饰符，v-model.lazy 。 "),n("br"),n("br"),t._v("\n                    3，在渲染的时候如果前后都出现了空格，那么内容会渲染成相同的空格，提交给后端会造成不必要的麻烦，Vue 也提供的一个相应的修饰符 .trim "),n("br"),n("br"),t._v("\n                    4，如果要要在html 中渲染回车等符号 pre 标签意以外 word-spacing   white-space 两个CSS 属性。 "),n("br"),n("br"),t._v("\n                    5，在Vue中修改数组的里面的内容，时间听不到数据变化的，所以Vue 给我们提供了一个方法，他挂在原型和自己身上Vue.$set(target,index,value);\n                    "),n("br"),t._v(" "),n("br"),t._v("\n                    例如："),n("br"),t._v(" "),n("pre",[t._v("                        new Vue({\n                            data(){\n                                userLIstanbul:[ 5,6,7,8,9,10 ]\n                            },\n                            methdos:{\n                                hanlderClick(){ //点击这个让这个userLIstanbul从 没点一次每次每个数加3\n                                    this.userLIstanbul.forEach((val,index) = >{\n                                        // 如果用这种方式 页面的试图无法被重新渲染。因为栈里的值没变！他存储的内存地址还是userLIstanbul的地址\n                                        val = val + 3;  \n                                        //利用Vue 提供的方法 Vue.$set(target,index,value);\n                                        this.$set(this.userLIstanbul,index, val+3); //改变成功\n                                    })\n                                }\n                            }\n                        })\n                        示例：\n                    ")]),t._v(" "),n("ul",t._l(t.userLIstanbul,function(e,s){return n("li",{key:s},[t._v(t._s(e))])}),0),t._v(" "),n("button",{staticClass:"btn btn-default",on:{click:t.hanlderClick}},[t._v(" hanlderClick ")]),t._v(" "),n("br"),n("br"),t._v("\n                    所以Vue 对数组多种方法进行了重写  分别有一下方法以数据列表的形式进行渲染。"),n("br"),n("br"),t._v(" "),n("ol",{staticClass:"myOl"},t._l(t.rewriteArrayApis,function(e,s){return n("li",{key:s},[t._v(t._s(e))])}),0)])])])]),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("Vue 中的计算属性和监听属性")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                计算属性: "),n("br"),t._v(" "),n("hr"),t._v(" "),n("pre",[t._v("                    new Vue({  //直接通过计算属性来把 ￥符号显示在页面中\n                        data(){ \n                            fruits:[\n                                {name:'apple',  price:'12'},\n                                {name:'banana',  price:'15'},\n                                {name:'pear',  price:'13'},\n                            ]\n                        },\n                        computed:{  //计算属性返回的方法 \n                            compitedFruits(){ 依赖数据发生改变也将触发 计算属性\n                                return this.fruits.map((v,i) => {\n                                    var obj = {},\n                                    obj.name = v.name;\n                                    obj.price = '￥'+v.price;\n                                    return obj;\n                                })\n                            }//计算属性默认 getter 方法打 如果有必要可以使用setter方法\n                            compitedFruits:{\n                                getter:function(){\n                                    //后执行  \n                                },\n                                setter:function(){\n                                    //先执行\n                                }\n                            }\n                        } \n                         \n                    })\n                ")]),t._v(" "),n("p",[t._v("下列数据是经过computed 处理后显示的数据：")]),t._v(" "),n("ol",t._l(t.compitedFruits,function(e,s){return n("li",{key:s},[t._v(t._s(e.name)+": "+t._s(e.price)+"斤")])}),0),t._v(" "),n("hr"),t._v("\n                监听属性: "),n("br"),t._v(" "),n("hr"),t._v(" "),n("pre",[t._v("                    new Vue({\n                        data:{  //老规矩 实例 el被省略\n                            fruits:[    \n                                {name:'apple',  price:'12'},\n                                {name:'banana',  price:'15'},\n                                {name:'pear',  price:'13'},\n                            ]\n                        },\n                        methods:{   //使用一个按钮来改变数来触发watch 事件\n                            handlerWatch(){\n                                this.fruits.forEach((v,i) => {\n                                    v.price = v.price - 0 + 5;\n                                })\n                            }\n                        },\n                        watch:{ // 监听属性，如果数据发生变化触发\n                            fruits:{\n                                handler(newVal,oldVal){\n                                    console.log(newVal,'这是新值');\n                                    console.log(oldVal,'这是旧值');\n                                },\n                                deep:true   //深度监听\n                            }\n                        }\n                    })\n                ")]),t._v(" "),n("button",{staticClass:"btn  btn-default",on:{click:t.handlerWatch}},[t._v(" 监听watch ")]),t._v("    < == 点击这个按钮打开控制台可见听到数据\n            ")])])]),t._v(" "),n("br"),n("br")])},staticRenderFns:[]};var f=n("C7Lr")(_,p,!1,function(t){n("8xqR")},null,null).exports,h={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("p",[t._v("  这是测试组件： "+t._s(t.fTos)+" ")]),t._v(" "),n("p",[n("button",{staticClass:"btn btn-default",on:{click:t.msgToFather}},[t._v("click me")])]),t._v(" "),t._t("default"),t._v(" "),t._t("ooo")],2)},staticRenderFns:[]};var b={name:"compoentStudy",data:function(){return{title:"Vue组建的学习",msg:"我是初始值",page:"son-compoent"}},components:{"son-compoent":n("C7Lr")({name:"test",data:function(){return{}},props:["fTos"],methods:{msgToFather:function(){this.$emit("toFather","我是子组件传给负组件的值")}}},h,!1,function(t){n("JgTF")},"data-v-0bdd5923",null).exports},methods:{fromSonCompoent:function(t){this.msg=t}},created:function(){this.title=this.$route.params.title}},g={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"base"}},[n("h4",{staticClass:"title"},[t._v(t._s(t.title))]),t._v(" "),n("hr"),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("vue组件之间的通信")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                父组件与子组件之间的通信：\n                "),n("hr"),t._v(" "),t._m(2),t._v(" "),n("br"),n("br"),t._v("\n                展示如下：   \n                "),n("son-compoent",{directives:[{name:"startColor",rawName:"v-startColor"}],attrs:{fTos:"我是父组件穿过来的值！"}})],1)])]),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("vue组件之间的通信")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                子组件和父组件之间的通信：\n                "),n("hr"),t._v(" "),n("pre",[t._v("                    //子组件与父组件之间的通信需要通过事件提示\n                    父组件HTML代码：\n                    <div>\n                        <son-component @toFather=\"fromSonCompoent\" > </son-component>\n                    </div>\n                    父组件中注册子组件 javaScript:\n                    improt sonCompoent from './path'\n                    new Vue({\n                        data(){\n                            return{\n\n                            }\n                        },\n                        components:{\n                            'son-component': sonCompoent,\n                        },\n                        methods:{\n                            fromSonCompoent(msg){\n                                console.log(msg)\n                            }\n                        }\n                    })\n\n                    子组件HTML 代码：\n                    <div>\n                        <p> 这是来自辅助见的一个值：{ {father-to-son} } </p>       \n                        <button @click=\"msgToFather\" > click me </button>\n                    </div>\n                    子组件javaScript 代码：\n                    new Vue({\n                        data(){\n                            return {\n                                \n                            }\n                        },\n                        methods:{\n                            msgToFather(){\n                                this.$emit('toFather','我是子组件传给负组件的值');\n                            }\n                        }\n                    })\n                ")]),t._v(" "),n("br"),n("br"),t._v("\n                展示如下：   \n                "),n("son-compoent",{on:{toFather:t.fromSonCompoent}}),t._v(" "),n("p",{directives:[{name:"startColor",rawName:"v-startColor"}]},[t._v(t._s(t.msg)+"\n                    "),n("button",{staticClass:"btn btn-default btn-xs",on:{click:function(e){t.msg="我是初始值"}}},[t._v(" 还原初始值 ")])])],1)])]),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("slot component keep-live 标签")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                slot 标签用法\n                "),n("hr"),t._v(" "),n("pre",[t._v("                    此方法是在子组件中想让父组件插入相应的HTML  使用\n                    以test.vue 为例：\n                        代码直接放入 test.vue中\n                ")]),t._v(" "),n("son-compoent",[n("div",[t._v("我是一个没有名字的插槽")]),t._v(" "),n("div",{attrs:{slot:"ooo"},slot:"ooo"},[t._v("我是命了名字的插槽，可以精准的插如子组件的某个位置")]),t._v(" "),n("div",[t._v("我没有名字  但是我会默认插入没有命名的插槽中去  我在命了名字插槽的下面，但是我会显示在他的上面")])])],1),t._v(" "),n("div",{staticClass:"pageAnalysis"},[t._v("\n                component 标签用法\n                "),n("hr"),t._v(" "),n("pre",[t._v('                    component 标签里面有一个 is 属相\n                    <component is="sonCompoent"> </component>\n\n                    //这样就能显示我们test.vue中的组件了， 注：每次他的切换都会重新加载一次数据，我们骚后就会介绍keep-live\n                ')]),t._v("\n                component 来引入子组件\n                "),n(t.page,{tag:"component"})],1),t._v(" "),t._m(3)])]),t._v(" "),n("br"),n("br"),n("br")])},staticRenderFns:[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("Vue 组件开发")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                component组件开发: "),n("br"),t._v(" "),n("hr"),t._v("\n                注：该内容全部以cli 为示例，并会讲vue 解析是什么东西，Vue.js 引用组件开发类似。只需要外部引入或者直接注入到页面！ "),n("br"),t._v(" "),n("br"),t._v(" "),n("pre",[t._v("                    //在每个cli 中的vue 文件我们可以在全局注册，也可在局部引入！\n\n                    //全局组件注册方法 在main.js \n                    import my-component from '/path';\n                    Vue.component('my-component',my-component from);\n                    //这样引入以后我们可以在任何组件中使用这个组件，组件具体的内容自己写想要定义的。 \n\n                    注意： Vue 标签还是属性和自定义属性的命名规则，用- 的方式来区别他们，小驼峰的时候 写入应该用 - 来区分组件 \n                    例如 myComponent  命名后要写成  my-component 来区分\n\n\n                    ------------------------------------------------------------------------------------------------------\n\n                    //在局部引入 直接在script 标签中直接引入 引入方式跟全局一样，同时要注册在实例里面\n                    import my-component from '/path';\n                    //注册的时候在Vue 组件中注册  组件中的写法如下\n                    export default{\n                        components:{\n                            'my-component': my-component,\n                        }\n                    }\n                    //这个时候就可以在template标签中可以使用了。   其实引用的方式类似！深入了解后都是一样的。\n                ")])])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"myself-show row"},[s("h3",{staticClass:"text-center"},[t._v("Vue 声明周期函数")]),t._v(" "),s("hr"),t._v(" "),s("div",{attrs:{calss:"text-left"}},[s("div",{staticClass:"pageAnalysis"},[t._v("\n                Vue 常用属性: "),s("br"),t._v(" "),s("hr"),t._v("\n                注：每个组件都有相应的钩子函数（声明周期函数）且渲染过程也是跟着相应实例更新的。 "),s("br"),s("br"),t._v(" "),s("pre",[t._v("                    new Vue({\n                        data(){\n                            return {\n                                //存放数据  --\x3e因为组件的数据要返回，主组件直接会保留在Vue 实例中\n                            }\n                        },\n                        methods:{\n                            //存放方法\n                        },\n                        computed:{\n                            //计算属性返回\n                        },\n                        watch:{\n                            //监控属性的处理\n                            '监控数据':{\n                                handler(){  //处理的对对象\n\n                                },\n                                deep: true // 深度监听\n                            }\n                        },\n                        //声明周期函数\n                        beforCreate:function(){\n                            //组件创建前\n                        },\n                        created:function(){\n                            //组件创建完毕\n                        },\n                        beforMount:function(){\n                            //组件挂在前\n                        },\n                        mounted:function(){\n                            //组件挂在完成\n                        },\n                        beforUpdate:function(){\n                            //数据发生改变执行  --监听实例中所有数据\n                        },\n                        update:function(){\n                            //数据改变后执行\n                        }\n\n                        //执行销毁组件后会执行两个钩子函数 this.$destory()\n\n                        beforDestory:function(){\n                            //销毁组件之前执行\n                        }\n                        destory:function(){\n                            //销毁组件之后执行\n                        }\n\n                    })\n                ")])]),t._v(" "),s("div",{staticClass:"pageAnalysis"},[s("h4",{staticClass:"text-center"},[t._v("Vue 组件挂在过程：")]),t._v(" "),s("div",{staticStyle:{width:"38%",margin:"0 auto"}},[s("a",{attrs:{href:"../../../static/imgs/vue-img/hookFun.png",target:"_Blank"}},[s("img",{attrs:{src:n("qXP0"),alt:""}})])]),t._v(" "),s("pre",[t._v("                    "),s("ol",[t._v("\n                        "),s("li",[t._v("在 new Vue()  完成以后会触发beforCreate（创建组件前的钩子函数）。")]),t._v("\n                        "),s("li",[t._v("然后观察数据，初始化事件，这个阶段是实例Vue 中的一个初始化阶段，这个阶段完成后就能访问到Vue中的事件和数据了，出发钩子函数created。")]),t._v("\n                        "),s("li",[t._v("初始化阶段完成后，Vue开始解析HTML 准备挂在到DOM 中（分别会分析数据是el 还是 template）如果是el 也要把el 里面的内容解析成模板。")]),t._v("\n                        "),s("li",[t._v("解析完成后，准备挂入DOM 节点的时候,这是会触发beforMount 钩子函数，现在这时是无法访问DOM 节点的。")]),t._v("\n                        "),s("li",[t._v("挂入DOM节点后将会触发mounted 钩子函数，现在所有的vDOM都挂载到了DOM树上，此时可以访问到DOM树上的节点。")]),t._v("\n                        "),s("hr"),t._v("\n                        "),s("li",[t._v("整个完成以后我一致mounted 这个阶段，来识别是否有数据发生改变，若发生改变，是否重新渲染相应节点")]),t._v("\n                        "),s("ol",[t._v("\n                            "),s("li",[t._v("数据发生前出发的钩子函数beforUpdate")]),t._v("\n                            "),s("li",[t._v("数据发生改变后触发的钩子函数update")]),t._v("\n                        ")]),t._v("\n                        "),s("li",[t._v("组件销毁是也会触发两个相应的函数  销毁组件的方法是 this.$destroy()")]),t._v("\n                        "),s("ol",[t._v("    \n                            "),s("li",[t._v("销毁前触发beforDestroy 这个钩子函数")]),t._v("\n                            "),s("li",[t._v("销毁后触发destroy 这个钩子函数")]),t._v("\n                        ")]),t._v("\n                    ")]),t._v("\n\n                    注：整个组件的渲染过程基本介绍完成。 Vue 渲染过程可以反复观看  "),s("a",{attrs:{href:"https://www.cnblogs.com/zhaodagang8/p/7819414.html",target:"_Blank"}},[t._v("这里")]),t._v("\n                ")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[this._v("                    //在此例中我们在整个项目中在建立一个此组件的子组件，在整个项目中navList 就已经是一个全局组件了，我们就不引入这个组件\n\n                    父组件HTML代码：\n                    <div>\n                        <son-component sather-to-son=\"我是他爸爸=。=\"> </son-component>\n                    </div>\n                    父组件中注册子组件 javaScript:\n                    improt sonCompoent from './path'\n                    new Vue({\n                        data(){\n                            return{\n\n                            }\n                        },\n                        components:{\n                            'son-component': sonCompoent,\n                        }\n                    })\n\n                    子组件HTML 代码：\n                    <div>\n                        <p> 这是来自辅助见的一个值：{ {father-to-son} } </p>          \n                    </div>\n                    子组件javaScript 代码：\n                    new Vue({\n                        data(){\n                            return {\n\n                            }\n                        },\n                        props:['father-to-son'],\n                    })\n\n                    props可以是个对象来限定传入的值的内容\n                     props:{\n                         'father-to-son':{\n                             type:[], // 可以是个数组也可以是一规则。\n                             required: true, //必填\n                             default: xx //默认值\n                        }\n                     }\n\n                     props 具体的验证信息 "),e("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/components-props.html#Prop-%E9%AA%8C%E8%AF%81"}},[this._v("查看我")]),this._v("\n                ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"pageAnalysis"},[this._v("\n                keep-live 标签用法\n                "),e("hr"),this._v(" "),e("pre",[this._v("                    import router form 'router'\n                ")])])}]};var C=n("C7Lr")(b,g,!1,function(t){n("MmyR")},null,null).exports,y={name:"directiveStudy",data:function(){return{title:"Vue自定义指令学习",msg:"fillter 过滤属性的值"}},filters:{myFillter:function(t){return console.log(t),console.log(this,"????"),"我是 filtter 处理后的数据"}},directives:{myOn:{bind:function(t,e,n){t.style.cursor="pointer",console.log(e),"click"===e.arg&&t.addEventListener("click",function(t){e.modifiers.stop&&t.stopPropagation,e.value()})}}},methods:{myOnClick:function(){console.log("这是我做的一个myOn自定属性模仿 v-on:click 实现的功能！"),alert("这是我做的一个myOn自定属性模仿 v-on:click 实现的功能！")}},created:function(){this.title=this.$route.params.title}},x={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"base"}},[n("h4",{staticClass:"title"},[t._v(t._s(t.title))]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("Vue 自定义指令")]),t._v(" "),n("hr"),t._v(" "),t._m(0),t._v(" "),n("div",{staticClass:"pageAnalysis text-center"},[n("p",{directives:[{name:"startColor",rawName:"v-startColor"}]},[t._v(" 我是全局自定义指令 v-starColor")])]),t._v(" "),t._m(1),t._v(" "),n("div",{staticClass:"pageAnalysis text-center"},[t._v("\n            点击我下面能看到我是否绑定到click 事件 同时stop 也能实现！ "),n("br"),n("br"),t._v(" "),n("p",{directives:[{name:"startColor",rawName:"v-startColor"},{name:"myOn",rawName:"v-myOn:click.stop",value:t.myOnClick,expression:"myOnClick",arg:"click",modifiers:{stop:!0}}]},[t._v(" 我是局部自定义指令 v-myOn")])])]),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("Vue fillter过滤属性")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                fileter过滤属性: "),n("br"),t._v(" "),n("hr"),t._v(" "),n("pre",[t._v("                    // Vue fillter 过滤属性比较局限，可以处理简单的东西，computed计算属性能完全处理 \n                    new Vue({\n                        data:{\n                            msg: 'fillter 过滤属性的值',\n                        }\n                        filters:{\n                            myFillter(msg){\n                                console.log(msg); //fillter 过滤属性的值  通过 | 管道把数据传输到了过滤属性中\n                                \n                                console.log(this,'????');  // this 并不是Vue 实例 所以在操作比较复杂混合处理的时候并不好用\n                                //我们可以对这个过滤属性进行操作然后返回出去 也可以直接返回\n                                return '我是 filtter 处理后的数据';\n                            }\n                        },\n                    })\n\n                    //注意 fillter 也可以用做一个全局的属性 \n                    Vue.fillter('name',function( msg ){ reutrn '想要返回的数据' });\n\n                    整个fillter 主要的不同他的this 指向一个undefined --\x3e 同时有一个管道语法，多个管道是从左往右执行。\n                ")]),t._v(" "),n("div",[n("p",[t._v("过滤属性要处理渲染的东西如下:")]),t._v(" "),n("p",[t._v(t._s(t._f("myFillter")(t.msg)))])])])])]),t._v(" "),n("br"),n("br")])},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{calss:"text-left"}},[e("div",{staticClass:"pageAnalysis"},[this._v("\n                自定义指令: "),e("br"),this._v(" "),e("hr"),this._v(" "),e("pre",[this._v("                    //全局指令\n                    Vue.directive('startColor', {\n                        //一共有五个钩子函数  常用绑定的就bind \n                        bind(el, bind, vnode) { //只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。\n                            // el 绑定所在的元素   bind 绑定的数据   Vnode  绑定虚拟DOM对象的数据\n                            // 功能： 给绑定一个全聚德start  \n                            el.style.backgroundColor = 'red';\n                            el.style.color = '#fff';\n                            el.style.padding = '5px 10px';\n                        },\n                        inserted(){ //被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。\n\n                        },\n                        update(){ //所在组件的 VNode 更新时调用，但是可能发生在其子 VNode 更新之前。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。\n\n                        },\n                        componentUpdated(){ //指令所在组件的 VNode 及其子 VNode 全部更新后调用。\n\n                        },\n                        unbind(){ //只调用一次，指令与元素解绑时调用。\n\n                        }\n                    });\n                ")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"pageAnalysis"},[e("pre",[this._v("                //我是局部自定义指令\n                new Vue({\n                    directives:{\n                        myOn:{\n                            bind(el,bind,vnode){    //实现一个类似于 v-on的功能\n                                //属性绑定和钩子函数均跟全局绑定方式一致！\n                                // el 当前绑定的元素  bind 当前绑定的数据  vnode 当前绑定虚拟dom 对象的数据\n                                el.style.cursor = 'pointer';\n                                console.log(bind);  //打印出来查看绑定的数据\n                                if(bind.arg === \"click\"){\n                                    el.addEventListener('click',function(e){\n                                        bind.modifiers.stop && e.stopPropagation;\n                                        bind.value();\n                                    })\n                                }\n                                \n                            }\n                        }\n                    },\n                    methods:{\n                        myOnClick(){\n                            cosnole.log('这是我做的一个myOn自定属性模仿 v-on:click 实现的功能！');\n                        }\n                    },\n                })\n            ")])])}]};var k=n("C7Lr")(y,x,!1,function(t){n("M4by")},null,null).exports,w={render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{id:"base"}},[e("h4",{staticClass:"title"},[this._v(this._s(this.title))]),this._v(" "),e("hr"),this._v(" "),this._m(0)])},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"myself-show row"},[e("h3",{staticClass:"text-center"},[this._v("Vue 自定义指令")]),this._v(" "),e("hr"),this._v(" "),e("div",{attrs:{calss:"text-left"}},[e("div",{staticClass:"pageAnalysis"},[this._v("\n                自定义指令: "),e("br"),this._v(" "),e("hr"),this._v(" "),e("pre",[this._v("\n                ")])])])])}]};var I=n("C7Lr")({name:"netServerStudy",data:function(){return{title:"web网络学习"}},created:function(){this.title=this.$route.params.title}},w,!1,function(t){n("WPbp")},null,null).exports,V={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"base"}},[n("h4",{staticClass:"title"},[t._v(t._s(t.title))]),t._v(" "),n("hr"),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2)])},staticRenderFns:[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("vueRouter 基础介绍")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                Vue-router  使用方式：\n                "),n("hr"),t._v(" "),n("pre",[t._v("                    //在安装Vue-cli时 如果未安装VueRouter 按照以下方法进行安装\n\n                    第一步： npm install -S vue-router\n\n                    第二步： 在main.js中写入路由配置和注册 或者 在建立一个新的js 文件来对他进行配置！\n                        这里我们在src的router文件夹建立了一个index.js 文件进行配置\n\n                        import Vue from 'vue'\n                        import VueRouter from 'vue-router'\n\n                        import 组件名 from 'path/组件路径'\n\n                        Vue.use(VueRouter)  //vue 插件用法\n                        let VueRouter = new VueRouter({\n                            routes:[\n                                { \n                                    path:'/路由',\n                                    name:'名字/规范跟组件名尽量一致',\n                                    component: 组件名\n                                }\n                            ]\n                        })\n\n                        export default VueRouter //暴露出来  ES6（组件开发） \n                    注：在子路由的情况下，父路由写name 会有警告。因为当某个路由有子级路由的时候，这时候父级路由需要一个默认的路由，所以父级路由不能定义name属性!\n\n                    第三步：如果直接在main.js 中配置就不需引入index.js\n                        import router from './router/index.js'\n                        new Vue({\n                            router, //注册Vue中\n                        }}\n\n                    //基本这样一个VueRouter的插件就注册完成了\n                ")]),t._v(" "),n("br"),n("br"),t._v(" "),n("pre",[t._v('                    //在该项目中，我们navlist 组件就是一个路由导航！\n                    使用的方法，现在需要写一个放入路由的盒子 <router-view/> 来盛放路由组件\n                    \n                    然后可以通过 <router-link :to="路由" >  点击我跳转路由 </router-link> 类似a标签\n                    \n                    或者用事件处理 this.$router.push()\n                ')])])])])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("VueRouter 路由传参")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                路由传参的方式： "),n("br"),t._v(" "),n("hr"),t._v("\n                方案一：\n                "),n("pre",[t._v("                    //事件下：\n                    handerActive(id){ //methods\n                        this.$router.push({\n                            path:`/path/$(id)`\n                        })\n                    }\n\n                    在路由下：\n                    {\n                        path:'/path/:id',\n                        name:'xxx',\n                        compoennt: 路由名\n                    }\n\n                    //在子组件中获取路由穿过来的参数方法\n                    this.$route.params.id\n                ")]),t._v("\n                方案二：\n                "),n("pre",[t._v("                    //通过路由属性中的name来确定匹配的路由，通过params来传递参数。\n                    this.$router.push({\n                        name:'xxxx',\n                        params:{\n                            id:id\n                        }\n                    })\n\n                    //路由配置必须有name 值\n                    {\n                        path:'/path',\n                        name:'xxxx',\n                        component: 路由名\n                    }\n                    //在子组件中获取参数\n                    this.$route.params.id     \n                    注： 这样的方式在url 中不会显示出来要传的值\n                ")]),t._v("\n                方案三：\n                "),n("pre",[t._v("                    //使用path来匹配路由，然后通过query来传递参数这种情况下 query传递的参数会显示在url后面?id=？\n                    this.$router.push({\n                        path:'/path',\n                        query:{\n                            id:id\n                        }\n                    })\n\n                    //路由配置必须有name 值\n                    {\n                        path:'/path',\n                        name:'xxxx',\n                        component: 路由名\n                    }\n                    //在子组件中获取参数\n                    this.$route.query.id\n                ")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"myself-show row"},[e("h3",{staticClass:"text-center"},[this._v("Vue 路由守卫")]),this._v(" "),e("hr"),this._v(" "),e("div",{attrs:{calss:"text-left"}},[e("div",{staticClass:"pageAnalysis"},[this._v("\n                路由守卫: "),e("br"),this._v(" "),e("hr"),this._v(" "),e("pre",[this._v("                    //什么是路由守卫：\n                    路由守卫，控制路由的权限! 路由守卫 可以分为全局守卫和路由独立守卫\n                    全局守卫：\n                        router.beforEach(to,from,next){\n                            to//从什么地方来\n                            from//到什么地方去\n                            next()//目标路由，如果不能通过跳转，或者通过\n                        }\n                        注：在路由还未跳转之前是无法获取到组件的数据。\n\n                    //定制路由\n                    router：[\n                        {\n                            path:'/path',\n                            name:'xxx',\n                            beforEnter: (to,from,next) => {\n                                to//从什么地方来\n                                from//到什么地方去\n                                next()//目标路由，如果不能通过跳转，或者通过\n                            }\n                        }\n                    ]\n\n                    注： 该项目页面均用的router来实现的，所以所有实际情况操作均以这个项目来实现，页面的title 中的数据是通过路由传参获取！\n                    要通过login 页面才能进入个人展示页面（oneSelf组件）;\n                ")])])])])}]};var $=n("C7Lr")({name:"routerStudy",data:function(){return{title:"VueRouter学习笔记"}},created:function(){this.title=this.$route.params.title}},V,!1,function(t){n("zUFH")},null,null).exports,A={render:function(){var t=this.$createElement,e=this._self._c||t;return e("div",{attrs:{id:"base"}},[e("h4",{staticClass:"title"},[this._v(this._s(this.title))]),this._v(" "),e("hr"),this._v(" "),this._m(0)])},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"myself-show row"},[e("h3",{staticClass:"text-center"},[this._v("Vue 自定义指令")]),this._v(" "),e("hr"),this._v(" "),e("div",{attrs:{calss:"text-left"}},[e("div",{staticClass:"pageAnalysis"},[this._v("\n                自定义指令: "),e("br"),this._v(" "),e("hr"),this._v(" "),e("pre",[this._v("\n                ")])])])])}]};var S=n("C7Lr")({name:"storeStudy",data:function(){return{title:"Vuex 状态管理器的学习"}},created:function(){this.title=this.$route.params.title}},A,!1,function(t){n("Wv1Z")},null,null).exports,L={name:"routerStudy",data:function(){return{title:"Vue 动画过渡",demo1:!0,demo2:!0,demo3:!0,liList:[1,2,3,4,5]}},methods:{remove:function(t){this.liList.splice(t,1)},addItem:function(){var t=Math.floor(Math.random()*this.liList.length);this.liList.splice(t,0,this.liList.length)}},created:function(){}},E={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"base"}},[n("h4",{staticClass:"title"},[t._v(t._s(t.title))]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v("Vue 动画过渡")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                Vue 动画基础涉及:\n                "),n("hr"),t._v(" "),n("pre",[t._v("                    //在Vue 中 给我们提供了6个class 分别是\n                        //进入动画\n                        .v-enter{   //进入动画开始的第一帧\n\n                        }\n                        .v-enter-active{    //动画类型，动画时间\n                            transition: all 1s ... //过渡动画方式\n                            animation: ...(动画名)  //动画的方式\n                        }\n                        .v-enter-to{    //动画结束后的方式\n\n                        }\n                        //离开动画 也有一样的三个方式\n                        .v-leave{   //离开动画前一帧  --\x3e离开跟进入动画样式一样可以忽略\n\n                        }\n                        .v-leave-active{    //离开动画的过程\n                            transition: all 1s ... //过渡动画方式\n                            animation: ...(动画名)  //动画的方式\n                        }\n                        .v-leave-to{    //离开动画的样式\n\n                        }\n                ")]),t._v(" "),n("br"),n("br"),t._v(" "),n("h4",[t._v("示例：")]),t._v(" "),n("hr"),t._v(" "),n("div",[n("p",{staticClass:"lead"},[n("button",{staticClass:"btn btn-primary",on:{click:function(e){t.demo1=!t.demo1}}},[t._v("示例 1 fade")])]),t._v(" "),n("transition",{attrs:{name:"fade"}},[t.demo1?n("div",{staticClass:"alert alert-info"},[t._v(" 这是示例1 的一个动画展示效果淡入淡出 ")]):t._e()]),t._v(" "),n("p",{staticClass:"lead"},[n("button",{staticClass:"btn btn-success",on:{click:function(e){t.demo2=!t.demo2}}},[t._v("示例 2 animation")])]),t._v(" "),n("transition",{attrs:{name:"anit",type:"animation",appear:""}},[t.demo2?n("div",{staticClass:"alert alert-success"},[t._v(" 这是示例2 Animation 动画效果")]):t._e()])],1)])])]),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v(" Vue 结合 Animation 库")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                Vue 结合 animation CSS库开发:\n                "),n("hr"),t._v(" "),n("pre",[t._v('                    //vue 结合animation 开发 transition 里面只能含有一个块\n                        //transition 标签中我们可以对class 进行简写\n                        <transition\n                            enter-class="enter"\n                            enter-active-class="enter-active"\n                            enter-to="enter-to"\n                            leave-class="leave"\n                            leave-active="leave-active"\n                            leave-to="leave-to">\n\n                            <div> 这是我简化后的动画书写方式  里面的名字可以自定义</div>\n\n                        <transition>\n                        //及CSS 写法如下\n                        <style>\n                            .enter{ //开始动画前的第一帧\n\n                            }\n                            .enter-active{  //动画方式\n                                transition / animation ;\n                            }\n                            .enter-to{  //结束动画的状态\n\n                            }\n\n                            .leave{ //离开动画的第一帧\n\n                            }\n                            .leave-active{   //动画方式\n                                transition / animation ;\n                            }\n                            .leave-to{  //离开动画的状态\n\n                            }\n                        </style>\n                ')]),t._v(" "),n("br"),n("br"),t._v(" "),n("h4",[t._v("示例：")]),t._v(" "),n("hr"),t._v(" "),n("div",[n("p",{staticClass:"lead"},[n("button",{staticClass:"btn btn-success",on:{click:function(e){t.demo3=!t.demo3}}},[t._v("示例 3 Animation库")])]),t._v(" "),n("transition",{attrs:{"enter-active-class":"animated bounce","leave-active-class":"animated shake",appear:""}},[t.demo3?n("div",{staticClass:"alert alert-success"},[t._v(" 这是示例2 Animation 动画效果")]):t._e()])],1)])])]),t._v(" "),n("div",{staticClass:"myself-show row"},[n("h3",{staticClass:"text-center"},[t._v(" Vue transition-group")]),t._v(" "),n("hr"),t._v(" "),n("div",{attrs:{calss:"text-left"}},[n("div",{staticClass:"pageAnalysis"},[t._v("\n                transition-group实现多组间\n                "),n("hr"),t._v(" "),n("pre",[t._v("                    \n                ")]),t._v(" "),n("br"),n("br"),t._v(" "),n("h4",[t._v("示例：")]),t._v(" "),n("hr"),t._v(" "),n("div",[n("p",{staticClass:"lead"},[n("button",{staticClass:"btn btn-success",on:{click:t.addItem}},[t._v(" addItem")])]),t._v(" "),n("transition-group",{staticClass:"list-group",attrs:{tag:"ul",name:"slide"}},t._l(t.liList,function(e,s){return n("li",{key:e,staticClass:"list-group-item",attrs:{data:e+"_"+s},on:{click:function(e){return t.remove(s)}}},[t._v(t._s(e))])}),0)],1)])])]),t._v(" "),n("br"),n("br"),n("br")])},staticRenderFns:[]};var F=n("C7Lr")(L,E,!1,function(t){n("yc1R")},null,null).exports;s.a.use(i.a);var R=new i.a({routes:[{path:"/",name:"HelloWorld",component:c},{path:"/index",component:u,children:[{path:"/",name:"oneSelf",component:d,beforeEnter:function(t,e,n){"/"===e.path?n():(alert("主页必须在登陆页面登陆！"),n("/"))}},{path:"/base",name:"baseStudy",component:f},{path:"/compoent",name:"compoentStudy",component:C},{path:"/directive",name:"directiveStudy",component:k},{path:"/netServer",name:"netServerStudy",component:I},{path:"/router",name:"routerStudy",component:$},{path:"/store",name:"storeStudy",component:S},{path:"/animation",name:"animation",component:F}]}]}),j=n("R4Sj");s.a.use(j.a);var P=new j.a.Store({state:{navList:[{name:"Vue基础",path:"/base",rname:"baseStudy"},{name:"Vue路由",path:"/router",rname:"routerStudy"},{name:"Vue组件",path:"/compoent",rname:"compoentStudy"},{name:"Vue指令",path:"/directive",rname:"directiveStudy"},{name:"Vue仓库",path:"/store",rname:"storeStudy"},{name:"Vue动画",path:"/animation",rname:"animation"},{name:"Web网络",path:"/netServer",rname:"netServerStudy"}]},getters:{}}),O={name:"navList",data:function(){return{haigLine:-1,navList:this.$store.state.navList}},methods:{handerActive:function(t,e,n,s){sessionStorage.setItem("id",n),this.haigLine=n,this.$router.push({name:t,params:{title:s}})}},created:function(){null!=sessionStorage.getItem("id")&&(this.haigLine=sessionStorage.getItem("id"))}},M={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"navList"}},[n("nav",{staticClass:"navbar navbar-inverse navbar-static-top"},[n("div",{staticClass:"container"},[t._m(0),t._v(" "),n("div",{staticClass:"navbar-collapse collapse"},[n("ul",{staticClass:"nav navbar-nav"},t._l(t.navList,function(e,s){return n("li",{key:s,class:{active:t.haigLine==s},on:{click:function(n){return t.handerActive(e.rname,e.path,s,e.name)}}},[n("a",{attrs:{href:"javascript:void(0)"}},[t._v(t._s(e.name))])])}),0)])])])])},staticRenderFns:[function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"navbar-header"},[e("a",{staticClass:"navbar-brand",attrs:{href:"https://chliaoxiang.github.io/"}},[this._v("\n                    LiaoXiang\n                ")])])}]};var N=n("C7Lr")(O,M,!1,function(t){n("Yyu+")},null,null).exports,T=n("DMPO"),U=n.n(T);n("Drwf");s.a.use(U.a),s.a.config.productionTip=!1,s.a.component("navList",N),s.a.directive("startColor",{bind:function(t,e,n){var s="red";t.style.backgroundColor=s,t.style.color="#fff",t.style.padding="5px 10px",setInterval(function(){s="red"===s?"blue":"red",t.style.backgroundColor=s},5e3)},inserted:function(){},update:function(){},componentUpdated:function(){},unbind:function(){}}),R.beforeEach(function(t,e,n){n()}),new s.a({el:"#app",router:R,store:P,components:{App:r},template:"<App/>"})},WPbp:function(t,e){},Wv1Z:function(t,e){},"Yyu+":function(t,e){},fRpv:function(t,e){},oTip:function(t,e){},qXP0:function(t,e,n){t.exports=n.p+"static/img/hookFun.39a1c88.png"},"vi+N":function(t,e){},yc1R:function(t,e){},zUFH:function(t,e){}},["NHnr"]);
//# sourceMappingURL=app.275e6ac202883b4549a2.js.map